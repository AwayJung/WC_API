<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wc_api.dao.ItemDAO">

    <!-- 아이템 생성 -->
    <insert id="insertItem" parameterType="Item" useGeneratedKeys="true" keyProperty="itemId">
        INSERT INTO item (
            seller_id,
            category_id,
            description,
            price,
            image_url,
            created_at,
            title,
            additional_images
        )
        VALUES (
                   #{sellerId},
                   #{categoryId},
                   #{description},
                   #{price},
                   #{imageUrl},
                   #{createdAt},
                   #{title},
                   #{additionalImages}
               )
    </insert>

    <!-- 아이템 상세 조회 -->
    <select id="selectItem" parameterType="Long" resultType="Item">
        SELECT
            i.item_id,
            i.seller_id,
            i.category_id,
            i.description,
            i.price,
            i.image_url,
            i.created_at,
            i.title,
            i.additional_images,
            i.view_count,
            u.login_email as seller_email,
            u.name as seller_name,
            c.name as category_name
        FROM item i
                 LEFT JOIN user u ON i.seller_id = u.id
                 LEFT JOIN category c ON i.category_id = c.id
        WHERE i.item_id = #{itemId}
    </select>

    <!-- 판매자 ID별 아이템 목록 조회 -->
    <select id="selectItemsBySellerId" parameterType="Long" resultType="Item">
        SELECT
            i.item_id,
            i.seller_id,
            i.category_id,
            i.description,
            i.price,
            i.image_url,
            i.created_at,
            i.title,
            i.additional_images,
            i.view_count,
            u.login_email as seller_email,
            u.name as seller_name,
            c.name as category_name
        FROM item i
                 LEFT JOIN user u ON i.seller_id = u.id
                 LEFT JOIN category c ON i.category_id = c.id
        WHERE i.seller_id = #{sellerId}
        ORDER BY i.item_id DESC
    </select>

    <!-- 조회수 증가 -->
    <update id="updateViewCount" parameterType="Long">
        UPDATE item
        SET view_count = view_count + 1
        WHERE item_id = #{itemId}
    </update>

    <!-- 아이템 목록 조회 -->
    <select id="selectItemList" resultType="Item">
        SELECT
            i.item_id,
            i.seller_id,
            i.category_id,
            i.description,
            i.price,
            i.image_url,
            i.created_at,
            i.title,
            i.additional_images,
            i.view_count,
            u.login_email as seller_email,
            u.name as seller_name,
            c.name as category_name
        FROM item i
                 LEFT JOIN user u ON i.seller_id = u.id
                 LEFT JOIN category c ON i.category_id = c.id
        ORDER BY i.item_id DESC
    </select>

    <!-- 아이템 수정 -->
    <update id="updateItem" parameterType="Item">
        UPDATE item
        SET
            category_id = #{categoryId},
            description = #{description},
            price = #{price},
            image_url = #{imageUrl},
            title = #{title},
            additional_images = #{additionalImages}
        WHERE item_id = #{itemId}
    </update>

    <!-- 아이템 삭제 -->
    <delete id="deleteItem" parameterType="Long">
        DELETE FROM item
        WHERE item_id = #{itemId}
    </delete>

    <!-- 카테고리별 아이템 목록 조회 -->
    <select id="selectItemsByCategory" parameterType="Long" resultType="Item">
        SELECT
            i.item_id,
            i.seller_id,
            i.category_id,
            i.description,
            i.price,
            i.image_url,
            i.created_at,
            i.title,
            i.additional_images,
            i.view_count,
            u.login_email as seller_email,
            u.name as seller_name,
            c.name as category_name
        FROM item i
                 LEFT JOIN user u ON i.seller_id = u.id
                 LEFT JOIN category c ON i.category_id = c.id
        WHERE i.category_id = #{categoryId}
        ORDER BY i.item_id DESC
    </select>

</mapper>